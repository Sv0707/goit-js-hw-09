{"version":3,"sources":["js/03-promises.js"],"names":["createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","console","log","refs","form","document","querySelector","addEventListener","e","preventDefault","amount","parseInt","currentTarget","elements","value","step","i"],"mappings":";AAAA,MAAMA,EAAgB,CAACC,EAAUC,KAC3BC,IAAAA,QAAQ,CAACC,EAASC,KAEpBC,WAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQK,QAAQC,2BAA2BT,QAAeC,QAG1DG,EAAOI,QAAQC,0BAA0BT,QAAeC,SAErDA,MAMLS,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/BH,EAAKC,KAAKG,iBAAiB,SAAUC,IACnCA,EAAEC,iBACEC,MAAAA,EAASC,SAASH,EAAEI,cAAcC,SAASH,OAAOI,OAClDC,EAAOJ,SAASH,EAAEI,cAAcC,SAASE,KAAKD,OAChDpB,IAAAA,EAAQiB,SAASH,EAAEI,cAAcC,SAASnB,MAAMoB,OAC/C,IAAA,IAAIE,EAAI,EAAGA,EAAIN,EAAQM,IAC1BxB,EAAcwB,EAAGtB,GACjBA,GAASqB","file":"03-promises.045d4f28.js","sourceRoot":"../src","sourcesContent":["const createPromise = (position, delay) => {\n  new Promise((resolve, reject) => {\n    \n    setTimeout(() => {      \n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } \n      else {\n        reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n          }\n        }, delay);\n\n  }\n)\n}\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n}\n\nrefs.form.addEventListener(\"submit\", e => {\n  e.preventDefault();\nconst amount = parseInt(e.currentTarget.elements.amount.value);\nconst step = parseInt(e.currentTarget.elements.step.value);\nlet delay = parseInt(e.currentTarget.elements.delay.value);\nfor (let i = 0; i < amount; i++) {\n  createPromise(i, delay);\n  delay += step;\n}\n})\n"]}